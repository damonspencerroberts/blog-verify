{"version":3,"sources":["Axios.js","App.js","index.js"],"names":["instance","axios","create","baseURL","App","state","data","shouldUpdate","sendData","bind","deleteData","getData","this","i","console","log","setState","s","Axios","get","then","res","e","push","eachId","catch","err","alert","blogIndex","cur","find","post","delete","mapped","blogs","map","className","title","author","date","src","image","alt","content","isImage","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,0ECuGEC,E,kDArGb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,KAAM,KACNC,cAAc,GAGhB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAVH,E,gEAcZG,KAAKD,Y,2CAIL,GAAIC,KAAKP,MAAME,aAAc,CAC3B,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IAAKD,KAAKD,UACjCG,QAAQC,IAAI,YACZH,KAAKI,SAAS,CAACT,cAAc,O,gCAItB,IAAD,OACFU,EAAI,GACVC,EAAMC,IAAI,wBACLC,MAAK,SAAAC,GACF,IAAK,IAAIC,KAAKD,EAAIf,KACdW,EAAEM,KAAF,2BACOF,EAAIf,KAAKgB,IADhB,IAEIE,OAAQF,QAGjBF,MAAK,WACJ,EAAKJ,SAAS,CAACV,KAAMW,OAExBQ,OAAM,SAAAC,GACHC,MAAMD,Q,+BAIPE,GACP,IACMC,EADQjB,KAAKP,MAAMC,KACPwB,MAAK,SAAAR,GACrB,OAAOA,EAAEE,SAAWI,KAEtBd,QAAQC,IAAIc,GACZX,EAAMa,KAAK,oBAAqBF,GAC/BT,MAAK,SAAAC,GAAG,OAAIP,QAAQC,IAAI,yBACxBU,OAAM,SAAAC,GAAG,OAAIC,MAAMD,MAEpBR,EAAMc,OAAO,mBAAqBJ,EAAY,SAE9ChB,KAAKI,SAAS,CAACT,cAAc,M,iCAIpBqB,GACTV,EAAMc,OAAO,mBAAqBJ,EAAY,SAC9ChB,KAAKI,SAAS,CAACT,cAAc,M,+BAGrB,IAEJ0B,EAFG,OACDC,EAAQtB,KAAKP,MAAMC,KAyBzB,OAvBc,OAAV4B,IACFD,EAASC,EAAMC,KAAI,SAACb,EAAGT,GACrB,OACE,sBAAKuB,UAAY,QAAjB,UACE,qBAAKA,UAAY,MAAjB,SACGvB,EAAI,IAEP,4BAAIS,EAAEE,SACN,6BAAKF,EAAEe,QACP,6BAAKf,EAAEgB,SACP,6BAAKhB,EAAEiB,OACP,qBAAKC,IAAOlB,EAAEmB,MAAOC,IAAOpB,EAAEe,MAAQ,QACtC,4BAAIf,EAAEqB,UACN,oDAAuBrB,EAAEsB,QAAU,MAAO,QAC1C,sBAAKR,UAAY,UAAjB,UACE,mBAAGA,UAAU,OAAOS,QAAW,kBAAM,EAAKrC,SAASc,EAAEE,SAArD,oBACA,mBAAGY,UAAU,SAASS,QAAW,kBAAM,EAAKnC,WAAWY,EAAEE,SAAzD,yBAb4BF,EAAEE,YAqBtC,gCACE,qBAAKY,UAAY,QAAjB,SACE,4DAEDH,S,GAhGSa,aCClBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f741de22.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://blog-me-567ca-default-rtdb.europe-west1.firebasedatabase.app/\"\n});\n\nexport default instance;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport Axios from \"./Axios\";\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      data: null,\n      shouldUpdate: false\n    }\n\n    this.sendData = this.sendData.bind(this);\n    this.deleteData = this.deleteData.bind(this);\n    this.getData = this.getData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.shouldUpdate) {\n      for (var i = 1; i < 3; i++) this.getData();\n      console.log(\"updated!\");\n      this.setState({shouldUpdate: false});\n    }\n  }\n\n  getData() {\n    const s = [];\n    Axios.get(\"/test-blog-post.json\")\n        .then(res => {\n            for (let e in res.data) {\n                s.push({\n                    ...res.data[e],\n                    eachId: e\n                });\n            }\n        }).then(() => {\n            this.setState({data: s});\n        })\n        .catch(err => {\n            alert(err);\n        }); \n  }\n\n  sendData(blogIndex) {\n    const blogs = this.state.data;\n    const cur = blogs.find(e => {\n      return e.eachId === blogIndex;\n    });\n    console.log(cur)\n    Axios.post(\"/final-posts.json\", cur)\n    .then(res => console.log(\"Successfully Sent!\"))\n    .catch(err => alert(err));\n\n    Axios.delete(\"/test-blog-post/\" + blogIndex + \".json\");\n\n    this.setState({shouldUpdate: true});\n\n  }\n\n  deleteData(blogIndex) {\n    Axios.delete(\"/test-blog-post/\" + blogIndex + \".json\");\n    this.setState({shouldUpdate: true});\n  }\n\n  render() {\n    const blogs = this.state.data;\n    let mapped;\n    if (blogs !== null) {\n      mapped = blogs.map((e, i) => {\n        return (\n          <div className = \"posts\" key = {e.eachId}>\n            <div className = \"num\">\n              {i + 1}\n            </div>\n            <p>{e.eachId}</p>\n            <h1>{e.title}</h1>\n            <h4>{e.author}</h4>\n            <h6>{e.date}</h6>\n            <img src = {e.image} alt = {e.title + \"img\"} />\n            <p>{e.content}</p>\n            <p>Is there an image? {e.isImage ? \"Yes\": \"No\"}</p>\n            <div className = \"buttons\">\n              <a className=\"send\" onClick = {() => this.sendData(e.eachId)}>✓</a>\n              <a className=\"sendno\" onClick = {() => this.deleteData(e.eachId)}>✕</a>\n            </div>\n          </div>\n        );\n      });\n    }\n    \n    return(\n      <div>\n        <div className = \"title\">\n          <h1>Let's verify some posts!</h1>\n        </div>\n        {mapped}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}